DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;
DROP TABLE IF EXISTS participation_requests CASCADE;
DROP TABLE IF EXISTS event_user CASCADE;
DROP TABLE IF EXISTS event_compilation CASCADE;

CREATE TABLE IF NOT EXISTS users (
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    user_email VARCHAR(255) UNIQUE,
    user_name VARCHAR(250),
    created TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_user PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS categories (
    category_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    category_name VARCHAR(50) UNIQUE,
    created TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_category PRIMARY KEY (category_id)
);

CREATE TABLE IF NOT EXISTS events (
    event_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    title VARCHAR(120),
    annotation VARCHAR(2000),
    description VARCHAR(7000),
    category_id BIGINT,
    initiator_id BIGINT,
    participant_limit INT,
    confirmed_requests INT,
    lat FLOAT,
    lon FLOAT,
    paid boolean,
    request_moderation boolean,
    state VARCHAR(50) NOT NULL,
    event_date TIMESTAMP WITHOUT TIME ZONE,
    published_on TIMESTAMP WITHOUT TIME ZONE,
    created TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_events PRIMARY KEY (event_id),
    FOREIGN KEY (category_id) REFERENCES categories(category_id) ON DELETE CASCADE,
    FOREIGN KEY (initiator_id) REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS compilations (
    compilation_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    compilation_title VARCHAR(50),
    pinned boolean NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_compilations PRIMARY KEY (compilation_id)
);

CREATE TABLE IF NOT EXISTS participation_requests (
    participation_request_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    event_id BIGINT,
    requestor_id BIGINT,
    status VARCHAR(50) NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_participation_requests PRIMARY KEY (participation_request_id),
    FOREIGN KEY (event_id) REFERENCES events(event_id),
    FOREIGN KEY (requestor_id) REFERENCES users(user_id)
);

CREATE TABLE IF NOT EXISTS event_user (
    event_user_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    event_id BIGINT,
    requestor_id BIGINT,
    CONSTRAINT pk_event_user PRIMARY KEY (event_user_id),
    FOREIGN KEY (event_id) REFERENCES events(event_id),
    FOREIGN KEY (requestor_id) REFERENCES users(user_id)
);

CREATE TABLE IF NOT EXISTS event_compilation (
    event_compilation_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    event_id BIGINT,
    compilation_id BIGINT,
    CONSTRAINT pk_event_compilation PRIMARY KEY (event_compilation_id),
    FOREIGN KEY (event_id) REFERENCES events(event_id),
    FOREIGN KEY (compilation_id) REFERENCES compilations(compilation_id)
);